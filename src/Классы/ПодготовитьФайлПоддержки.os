#Использовать logos

Перем _Лог;
Перем _КаталогИсходников;
Перем _ФайлНастроек;

Процедура ОписаниеКоманды(Команда) Экспорт
	
	Команда.Аргумент("SRC", "" ,"Путь к каталогу с исходниками. Например ./src")
        .ТСтрока()
        .ВОкружении("SRC");
	
	Команда.Аргумент("SUPPORT_JSON", "" ,"Путь к файлу с данными о поддержке. Например ./support_settings.json")
		.ТСтрока()
		.ВОкружении("SUPPORT_JSON");
	
КонецПроцедуры

Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	
    ИнициализацияПараметров(Команда);
	
	параметрыПоддержки = Поддержка.ПрочитатьИнформациюОПоддержке( _КаталогИсходников );

	ОбщегоНазначения.ЗаписатьJSONВФайл( параметрыПоддержки, _ФайлНастроек, _Лог );
	
КонецПроцедуры

Процедура ИнициализацияПараметров(Знач Команда)
	
	путьКРезультату = Команда.ЗначениеАргумента("SUPPORT_JSON");
    путьККаталогуИсходников = Команда.ЗначениеАргумента("SRC");
	
    каталогИсходников = Новый Файл(путьККаталогуИсходников);
	_КаталогИсходников = путьККаталогуИсходников;
    _лог.Отладка( "Каталог исходников = " + _КаталогИсходников );
    Если Не каталогИсходников.Существует()
        Или Не каталогИсходников.ЭтоКаталог() Тогда
		
		_лог.Ошибка( СтрШаблон("Каталог исходников <%1> не существует.", путьККаталогуИсходников) );
		ЗавершитьРаботу(1);

    КонецЕсли;
    
    файлДжсон = Новый Файл(путьКРезультату);
    _ФайлНастроек = файлДжсон.ПолноеИмя;    
    _лог.Отладка( "Файл результат = " + _ФайлНастроек );
	
КонецПроцедуры

Функция ИмяЛога() Экспорт
	Возврат "oscript.app.parseSupport";
КонецФункции

_Лог = Логирование.ПолучитьЛог(ИмяЛога());